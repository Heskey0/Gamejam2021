//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System.Diagnostics;
using DG.Tweening;

namespace QFramework.Example
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using UnityEngine.UI;
    using UniRx;
    
    
    public class PlayerStatePanelData : QFramework.UIPanelData
    {
    }
    
    public partial class PlayerStatePanel : QFramework.UIPanel
    {
        private Player _player;
        private Animator _animator;
        private Image _images;
        
        //public static Sprite[] _sprites;

        
        
        protected override void ProcessMsg(int eventId, QFramework.QMsg msg)
        {
            var equip = (EquipEnum) int.Parse((msg as EventMsg).Msg as string);
            
            switch (eventId)
            {
                case (int)UIEventEnum.Main.ChangeEquip:
                    ChangeEquip(equip);
                    break;
            }
        }

        private void ChangeEquip(EquipEnum value)
        {
            // imgEquip.sprite = _sprites[(int) value];
            imgEquip.sprite = ResourcesMgr.Instance.Get<Sprite>("icon/icon" + (int) value);
            switch (value)
            {
                case EquipEnum.Pencil:
                    Debug.Log("pencilMessage");
                    _animator.SetTrigger("pencilBT");
                    break;
                case EquipEnum.Paper:
                    Debug.Log("paperMessage");
                    _animator.SetTrigger("paperBT");
                    break;
                case EquipEnum.ArtKnife:
                    _animator.SetTrigger("artKnifeBT");
                    break;
                case EquipEnum.PaperFan:
                    _animator.SetTrigger("paperFanBT");
                    break;

                case EquipEnum.Camera:
                    _animator.SetTrigger("cameraBT");
                    break;
                case EquipEnum.Death:
                    _animator.SetTrigger("deathBT");
                    break;
                case EquipEnum.DeathEnd:
                    //_animator.SetTrigger("deathBT");
                    break;
                case EquipEnum.ChickenKnife:
                    _animator.SetTrigger("deathBT");
                    break;
                case EquipEnum.HpBar:
                    _animator.SetTrigger("hpBarBT");
                    break;

                case EquipEnum.Katana:
                    _animator.SetTrigger("katanaBT");
                    break;
                case EquipEnum.Japan:
                    _animator.SetTrigger("deathBT");
                    break;
                case EquipEnum.ACG:
                    _animator.SetTrigger("deathBT");
                    break;
                case EquipEnum.CgCollection:
                    _animator.SetTrigger("deathBT");
                    break;

                case EquipEnum.Summer:
                    QMsgCenter.Instance.SendMsg(EventMsgPool.Instance.Allocate(
                        ((int)value).ToString()
                        , (int) GameEventEnum.Skill.Attack
                    ));
                    break;
                case EquipEnum.BigSister:
                    _animator.SetTrigger("bigSister");
                    break;
                case EquipEnum.GamePad:
                    _animator.SetTrigger("deathBT");
                    break;
                case EquipEnum.Mother:
                    _animator.SetTrigger("deathBT");
                    break;

                case EquipEnum.Key:
                    _animator.SetTrigger("deathBT");
                    break;
                case EquipEnum.Ps:
                    _animator.SetTrigger("deathBT");
                    break;
            }
        }
        
        
        
        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as PlayerStatePanelData ?? new PlayerStatePanelData();
            // please add init code here
            RegisterEvent(UIEventEnum.Main.ChangeEquip);
            
            _player = GameObject.FindGameObjectWithTag("Player").GetComponent<Player>();
            _animator = _player.GetComponent<Animator>();

            //TODO:加载icon
            // for (int i = 0; i < (int)EquipEnum.End; i++)
            // {
            //     _sprites[i] = ResourcesMgr.Instance.Get<Sprite>("icon/icon" + i);
            //     if (_sprites[i]==null)
            //     {
            //         Debug.Log("sprite为空");
            //     }
            // }
            
            //绑定Hp
            _player.curHp
                .Subscribe(value =>
                {
                    DOTween.Complete(0);
                    txtHp.transform
                        .DOPunchScale(Vector3.one * 0.5f, 0.2f)
                        .SetId(0);
                    
                    var delta = Mathf.Clamp( _player.curHp.Value / _player.fullHp,0,_player.fullHp);
                    txtHp.text = (int)_player.curHp.Value + "/" + (int)_player.fullHp;
                    hpBar.transform.DOScaleX(delta, 0.3f)
                        .SetEase(Ease.OutCirc);
                });
            _player.curHp
                .Throttle(TimeSpan.FromMilliseconds(800))
                .Subscribe(value =>
                {
                    var delta = Mathf.Clamp( _player.curHp.Value / _player.fullHp,0,_player.fullHp);
                    hpDeltaBar.transform.DOScaleX(delta, 1.8f)
                        .SetEase(Ease.OutCirc);
                });
            
            //绑定能量条imgEquipLife
            for (int i = 0; i < (int)EquipEnum.End; i++)
            {
                int j = i;
                SkillAttack.life[i].Subscribe(value =>
                {
                    //int j = i;
                    float delta = (float)value / (float)GameConfig.Instance.life[j];
                    if ((int)PlayerSkillMaster.curEquip.Value == j)
                    {
                        imgEquipLife.transform
                            .DOScaleX(delta,0.3f)
                            .SetEase(Ease.OutCirc);
                    }
                });
            }


        }

        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        protected override void OnOpen(QFramework.IUIData uiData)
        {
        }
        
        protected override void OnShow()
        {
        }
        
        protected override void OnHide()
        {
        }
        
        protected override void OnClose()
        {
        }
    }
}
